<!DOCTYPE html>  <!-- heavily commented for #100DEVS! -->
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="css/style.css">
</head>

<body class="yellowTheme">
    <main>
        <% const date = new Date() %> <!-- setting up a date object to keep track of when items were added -->
        <% const itemsLeft=arrayOfItems.filter(el=> el.completed === false).length %> <!--storing items which are currently completed: false -->
            <header>
                <h1>To-Do List</h1>
                <!-- experimenting with changing themes -->
                <!-- <ul>     
                    <li class="theme">Yellow Theme</li>
                    <li class="theme">Pink Theme</li>
                    <li class="theme">Dark Theme</li>
                    <li class="theme">Coffee Theme</li>
                </ul> -->
            </header>
            <section class="toDoList">
                <h2>
                    <%= itemsLeft !=1 ? `${itemsLeft} tasks` : `${itemsLeft} task` %> left to do! <!-- ternary statement setting correct grammar based on items left with completed set to false - displaying as h2-->
                </h2>
                <form action="/createTodo" method="POST"> <!-- here is the form which will send info to server.js through /createTodo -->
                    <input class="text" type="text" name="todoItem" placeholder="enter an item">
                    <input type="hidden" name="userDate" value="<%= date.get %>">
                    <input class="submit" type="submit" value="Add it to the list!">
                </form>
                <ul>
                    <% for (let i=0; i < arrayOfItems.length; i++){ %> <!-- start the for loop iterating over items to draw them on the DOM correctly-->
                        <li class="todoItem dont-break-out">
                            <% if (arrayOfItems[i].completed===true) { %>
                                <span class="completed"> <!-- if the item is completed create a span with class of completed-->
                                    <%= arrayOfItems[i].todo %> <!-- put the text from the todo field in that span-->
                                </span>
                                <% } else { %>
                                <span> <!-- otherwise create a span without a class -->
                                    <%= arrayOfItems[i].todo %> <!-- and display the text from that item in there -->
                                </span>
                                <% } %>
                                <span class="delete">âœ–</span> <!-- ending the else block -->
                        </li>
                    <% } %> <!-- ending the for loop -->
                </ul>
            </section>
    </main>
    <footer>
        <span><%= date.getFullYear() %> - by <a href="https://github.com/mViolet">mViolet</a>.</span> <!-- adding the year to the span in the footer because why not -->
    </footer>
    

        <!-- Tim Holman's github corners: https://tholman.com/-->
        <a href="https://github.com/mViolet/mongoDB-todo" class="github-corner lightmode" aria-label="View source on GitHub"><svg width="80" height="80"
                viewBox="0 0 250 250" style="fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;"
                aria-hidden="true">
                <path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"></path>
                <path
                    d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2"
                    fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"></path>
                <path
                    d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z"
                    fill="currentColor" class="octo-body"></path>
            </svg></a>
        <a href="https://github.com/mViolet/mongoDB-todo" class="github-corner darkmode" aria-label="View source on GitHub"><svg width="80" height="80"
                viewBox="0 0 250 250" style="fill:#fff; color:#151513; position: absolute; top: 0; border: 0; right: 0;"
                aria-hidden="true">
                <path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"></path>
                <path
                    d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2"
                    fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"></path>
                <path
                    d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z"
                    fill="currentColor" class="octo-body"></path>
            </svg></a>
            
</body>
<script src="/main.js"></script>

</html>